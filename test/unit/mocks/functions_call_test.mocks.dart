// Mocks generated by Mockito 5.4.0 from annotations
// in flutter_app_tfg/test/unit/functions_call_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:cloud_functions/cloud_functions.dart' as _i4;
import 'package:cloud_functions_platform_interface/cloud_functions_platform_interface.dart'
as _i3;
import 'package:firebase_auth/firebase_auth.dart' as _i9;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:flutter_app_tfg/services/Entities/Metrics/GenericMetric.dart'
as _i13;
import 'package:flutter_app_tfg/services/Entities/Response.dart' as _i5;
import 'package:flutter_app_tfg/services/Firebase/FirebaseFunctionsCaller.dart'
as _i11;
import 'package:flutter_app_tfg/services/Firebase/MyAuthController.dart' as _i8;
import 'package:geolocator/geolocator.dart' as _i10;
import 'package:geolocator_android/geolocator_android.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(
      Object parent,
      Invocation parentInvocation,
      ) : super(
    parent,
    parentInvocation,
  );
}

class _FakeFirebaseFunctionsPlatform_1 extends _i1.SmartFake
    implements _i3.FirebaseFunctionsPlatform {
  _FakeFirebaseFunctionsPlatform_1(
      Object parent,
      Invocation parentInvocation,
      ) : super(
    parent,
    parentInvocation,
  );
}

class _FakeHttpsCallable_2 extends _i1.SmartFake implements _i4.HttpsCallable {
  _FakeHttpsCallable_2(
      Object parent,
      Invocation parentInvocation,
      ) : super(
    parent,
    parentInvocation,
  );
}

class _FakeHttpsCallablePlatform_3 extends _i1.SmartFake
    implements _i3.HttpsCallablePlatform {
  _FakeHttpsCallablePlatform_3(
      Object parent,
      Invocation parentInvocation,
      ) : super(
    parent,
    parentInvocation,
  );
}

class _FakeHttpsCallableResult_4<T> extends _i1.SmartFake
    implements _i4.HttpsCallableResult<T> {
  _FakeHttpsCallableResult_4(
      Object parent,
      Invocation parentInvocation,
      ) : super(
    parent,
    parentInvocation,
  );
}

class _FakeResponse_5 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_5(
      Object parent,
      Invocation parentInvocation,
      ) : super(
    parent,
    parentInvocation,
  );
}


/// A class which mocks [FirebaseFunctions].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFunctions extends _i1.Mock implements _i4.FirebaseFunctions {
  MockFirebaseFunctions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
    Invocation.getter(#app),
    returnValue: _FakeFirebaseApp_0(
      this,
      Invocation.getter(#app),
    ),
  ) as _i2.FirebaseApp);
  @override
  _i3.FirebaseFunctionsPlatform get delegate => (super.noSuchMethod(
    Invocation.getter(#delegate),
    returnValue: _FakeFirebaseFunctionsPlatform_1(
      this,
      Invocation.getter(#delegate),
    ),
  ) as _i3.FirebaseFunctionsPlatform);
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
    Invocation.getter(#pluginConstants),
    returnValue: <dynamic, dynamic>{},
  ) as Map<dynamic, dynamic>);
  @override
  _i4.HttpsCallable httpsCallable(
      String? name, {
        _i3.HttpsCallableOptions? options,
      }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpsCallable,
          [name],
          {#options: options},
        ),
        returnValue: _FakeHttpsCallable_2(
          this,
          Invocation.method(
            #httpsCallable,
            [name],
            {#options: options},
          ),
        ),
      ) as _i4.HttpsCallable);
  @override
  _i4.HttpsCallable httpsCallableFromUrl(
      String? url, {
        _i3.HttpsCallableOptions? options,
      }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpsCallableFromUrl,
          [url],
          {#options: options},
        ),
        returnValue: _FakeHttpsCallable_2(
          this,
          Invocation.method(
            #httpsCallableFromUrl,
            [url],
            {#options: options},
          ),
        ),
      ) as _i4.HttpsCallable);
  @override
  _i4.HttpsCallable httpsCallableFromUri(
      Uri? uri, {
        _i3.HttpsCallableOptions? options,
      }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpsCallableFromUri,
          [uri],
          {#options: options},
        ),
        returnValue: _FakeHttpsCallable_2(
          this,
          Invocation.method(
            #httpsCallableFromUri,
            [uri],
            {#options: options},
          ),
        ),
      ) as _i4.HttpsCallable);
  @override
  void useFunctionsEmulator(
      String? host,
      int? port,
      ) =>
      super.noSuchMethod(
        Invocation.method(
          #useFunctionsEmulator,
          [
            host,
            port,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [HttpsCallable].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpsCallable extends _i1.Mock implements _i4.HttpsCallable {
  MockHttpsCallable() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.HttpsCallablePlatform get delegate => (super.noSuchMethod(
    Invocation.getter(#delegate),
    returnValue: _FakeHttpsCallablePlatform_3(
      this,
      Invocation.getter(#delegate),
    ),
  ) as _i3.HttpsCallablePlatform);
  @override
  _i7.Future<_i4.HttpsCallableResult<T>> call<T>([dynamic parameters]) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [parameters],
        ),
        returnValue: _i7.Future<_i4.HttpsCallableResult<T>>.value(
            _FakeHttpsCallableResult_4<T>(
              this,
              Invocation.method(
                #call,
                [parameters],
              ),
            )),
      ) as _i7.Future<_i4.HttpsCallableResult<T>>);
}

/// A class which mocks [MyAuth].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyAuth extends _i1.Mock implements _i8.MyAuthController {
  MockMyAuth() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Stream<_i9.User?> get user => (super.noSuchMethod(
    Invocation.getter(#user),
    returnValue: _i7.Stream<_i9.User?>.empty(),
  ) as _i7.Stream<_i9.User?>);
  @override
  bool isUserLoggedIn() => (super.noSuchMethod(
    Invocation.method(
      #isUserLoggedIn,
      [],
    ),
    returnValue: false,
  ) as bool);
  @override
  String getUserName() => (super.noSuchMethod(
    Invocation.method(
      #getUserName,
      [],
    ),
    returnValue: '',
  ) as String);
  @override
  String getUserId() => (super.noSuchMethod(
    Invocation.method(
      #getUserId,
      [],
    ),
    returnValue: '',
  ) as String);
  @override
  _i7.Future<_i5.Response> sendRestorePasswordEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendRestorePasswordEmail,
          [email],
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #sendRestorePasswordEmail,
            [email],
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> createAccount({
    required String? email,
    required String? name,
    required String? surname,
    required String? password,
    required String? passwordRepeat,
    required String? phone,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAccount,
          [],
          {
            #email: email,
            #name: name,
            #surname: surname,
            #password: password,
            #passwordRepeat: passwordRepeat,
            #phone: phone,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #createAccount,
            [],
            {
              #email: email,
              #name: name,
              #surname: surname,
              #password: password,
              #passwordRepeat: passwordRepeat,
              #phone: phone,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> signIn({
    required String? email,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #signIn,
          [],
          {
            #email: email,
            #password: password,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #signIn,
            [],
            {
              #email: email,
              #password: password,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  bool checkPassord(String? password) => (super.noSuchMethod(
    Invocation.method(
      #checkPassord,
      [password],
    ),
    returnValue: false,
  ) as bool);
  @override
  _i7.Future<_i5.Response> signOut() => (super.noSuchMethod(
    Invocation.method(
      #signOut,
      [],
    ),
    returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_5(
      this,
      Invocation.method(
        #signOut,
        [],
      ),
    )),
  ) as _i7.Future<_i5.Response>);
}

/// A class which mocks [Geolocator].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeolocator extends _i1.Mock implements _i10.Geolocator {
  MockGeolocator() {
    _i1.throwOnMissingStub(this);
  }
}

/// A class which mocks [FirebaseFunctionsCaller].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFunctionsCaller extends _i1.Mock
    implements _i11.FirebaseFunctionsCaller {
  MockFirebaseFunctionsCaller() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> findNearestHealthCenter(_i12.Position? position) =>
      (super.noSuchMethod(
        Invocation.method(
          #findNearestHealthCenter,
          [position],
        ),
        returnValue: _i7.Future<String>.value(''),
      ) as _i7.Future<String>);
  @override
  _i7.Future<_i5.Response> saveMetrics(
      List<_i13.GenericMetric>? metrics,
      _i12.Position? pos,
      ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveMetrics,
          [
            metrics,
            pos,
          ],
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #saveMetrics,
            [
              metrics,
              pos,
            ],
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> createUserDoc(
      String? uId,
      String? email,
      String? name,
      String? surname,
      String? phone,
      ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserDoc,
          [
            uId,
            email,
            name,
            surname,
            phone,
          ],
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #createUserDoc,
            [
              uId,
              email,
              name,
              surname,
              phone,
            ],
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> generateAlert(
      List<_i13.GenericMetric>? metrics,
      _i12.Position? pos,
      ) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateAlert,
          [
            metrics,
            pos,
          ],
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_5(
          this,
          Invocation.method(
            #generateAlert,
            [
              metrics,
              pos,
            ],
          ),
        )),
      ) as _i7.Future<_i5.Response>);
}

